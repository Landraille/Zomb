<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Zombicide.Styles">
    <Style x:Key="DefaultButton" TargetType="Button">
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="FontSize" Value="26" />
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Library;component/Image/Application/menubutton.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Keyboard button -->
    <Style x:Key="KeyBoardButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Background"
                Value="{DynamicResource Sable2Brush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Sable2Brush}" />
        <Setter Property="Width"
                Value="{DynamicResource ButtonSmallWidth}" />
        <Setter Property="Height"
                Value="{DynamicResource ButtonLargeHeight}" />
        <Setter Property="Focusable"
                Value="False" />
    </Style>

    <!-- Money Button -->
    <Style x:Key="MoneyButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource BlueGray600Brush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BlueGray600Brush}" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="{DynamicResource ButtonLargeHeight}" />
        <Setter Property="Width"
                Value="{DynamicResource ButtonLargeWidth}" />
        <Setter Property="FontSize"
                Value="{DynamicResource SubHeaderFontSize}" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="Margin"
                Value="10,0,0,0" />
    </Style>

    <Style x:Key="LogoAppButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource DefaultButton}">
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Width"
                Value="{DynamicResource ButtonSmallWidth}" />
        <Setter Property="Height"
                Value="{DynamicResource ButtonLargeHeight}" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{DynamicResource LogoApp}"
                           Focusable="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Action button  -->
    <Style x:Key="ActionButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Border.CornerRadius"
                Value="2" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource OrangeColorBrush1}" />
        <Setter Property="Margin"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Focusable="False" />
                        <Border x:Name="Border"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Focusable="False" />
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                Opacity="0"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentControl Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        MinHeight="{TemplateBinding MinHeight}"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="{TemplateBinding Focusable}"
                                        Content="{TemplateBinding Content}"
                                        Margin="{TemplateBinding Margin}"
                                        Visibility="{TemplateBinding Visibility}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="DisabledVisualElement"
                                    Property="Opacity"
                                    Value="0.5" />
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush6}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource GrayBrush4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Acticle Shortcut -->
    <Style x:Key="ArticleShortCutStyle"
           TargetType="Button"
           BasedOn="{StaticResource ActionButtonStyle}">
        <Setter Property="Background"
                Value="{DynamicResource Sable2Brush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Sable2Brush}" />
        <Setter Property="Width"
                Value="52" />
        <Setter Property="Height"
                Value="46" />
    </Style>

    <Style x:Key="FamilleShortCutStyle"
           TargetType="Button"
           BasedOn="{StaticResource ArticleShortCutStyle}">
        <Setter Property="Width"
                Value="59" />
        <Setter Property="Margin"
                Value="0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected}"
                         Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource OrangeColorBrush1}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Bouton Next Action-->
    <Style x:Key="NextButtonActionStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Width"
                Value="49" />
        <Setter Property="Height"
                Value="119" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource OrangeColorBrush1}" />
        <Setter Property="Margin"
                Value="1" />
        <Setter Property="Background"
                Value="{DynamicResource OrangeColorBrush2}" />
    </Style>

    <Style x:Key="ArticlePreviusNextStyle"
           TargetType="Button"
           BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Background"
                Value="{DynamicResource Orange300Brush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Gray200Brush}" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Margin"
                Value="1" />
    </Style>

    <Style x:Key="FamilleNextStyle"
           TargetType="Button"
           BasedOn="{StaticResource ArticlePreviusNextStyle}">
        <Setter Property="Background"
                Value="{DynamicResource Green400Brush}" />

    </Style>

    <!--  NumPad button  -->
    <Style x:Key="NumPadButtonMetroStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Background"
                Value="{DynamicResource Blue600Brush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Blue700Brush}" />
        <!--<Setter Property="Background"
                Value="#6C8C9B" />
        <Setter Property="BorderBrush"
                Value="#5A7581" />-->
        <Setter Property="MinHeight"
                Value="70" />
        <Setter Property="MinWidth"
                Value="50" />

        <Setter Property="Padding"
                Value="2 2" />
        <Setter Property="Margin"
                Value="1" />
        <Setter Property="FontSize"
                Value="18" />
        <Setter Property="FontWeight"
                Value="Normal">
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Focusable="False">
                        <Border x:Name="Background"
                                Focusable="False"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        <Border x:Name="Border"
                                Background="{x:Null}"
                                Focusable="False"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="BorderPressed"
                                Opacity="0"
                                Background="{DynamicResource Gray050Brush}"
                                VerticalAlignment="Stretch"
                                CornerRadius="2"
                                HorizontalAlignment="Stretch"
                                Focusable="False" />
                        <ContentControl Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"                             
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderPressed"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="BorderPressed"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="BorderPressed"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>

        </Setter>

    </Style>

    <Style x:Key="KeyboardButtonMetroStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource NumPadButtonMetroStyle}">

        <Setter Property="MinHeight"
                Value="70" />
        <Setter Property="MinWidth"
                Value="50" />


    </Style>

    <!-- Choices button -->
    <Style x:Key="ChoicesButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Width"
                Value="200" />
        <Setter Property="Height"
                Value="150" />
        <Setter Property="Foreground"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ValidateButtonBrush}" />
        <Setter Property="FontSize"
                Value="{DynamicResource SubHeaderFontSize}" />
        <Setter Property="Background"
                Value="{DynamicResource ValidateButtonBrush}" />
    </Style>

    <!--  OK button  -->
    <Style x:Key="OKButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource Orange500Brush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Orange500Brush}" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="{DynamicResource ButtonLargeHeight}" />
        <Setter Property="Width"
                Value="{DynamicResource ButtonLargeWidth}" />
        <Setter Property="FontSize"
                Value="{DynamicResource SubHeaderFontSize}" />
        <Setter Property="FontWeight"
                Value="Normal" />
        <Setter Property="Margin"
                Value="10,0,0,0" />
    </Style>

    <Style x:Key="CancelButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource OKButton}">
        <Setter Property="Background"
                Value="{DynamicResource RedBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource RedBrush}" />
    </Style>

    <!--Bouton Modal-->
    <Style x:Key="ModalButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Width"
                Value="120" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Focusable="False" />
                        <Border x:Name="Border"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent},  Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Focusable="False" />
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                Opacity="0"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentControl Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        MinHeight="{TemplateBinding MinHeight}"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="{TemplateBinding Focusable}"
                                        Content="{TemplateBinding Content}"
                                        Margin="{TemplateBinding Margin}"
                                        Visibility="{TemplateBinding Visibility}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="DisabledVisualElement"
                                    Property="Opacity"
                                    Value="0.5" />
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush6}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource GrayBrush4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Pay button  -->
    <Style x:Key="PayButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Border.CornerRadius"
                Value="5" />

        <Setter Property="Foreground"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource Orange500Brush}" />
        <Setter Property="Margin"
                Value="10,2" />
        <Setter Property="Background"
                Value="{DynamicResource Orange500Brush}" />
    </Style>

    <!-- no mouve over -->
    <Style x:Key="NoMouseOverButton"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent},  Mode=OneWay}"
                                Focusable="False" />
                        <ContentControl Padding="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        MinHeight="{TemplateBinding MinHeight}"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        Foreground="{TemplateBinding Foreground}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="{TemplateBinding Focusable}"
                                        Content="{TemplateBinding Content}"
                                        Margin="{TemplateBinding Margin}"
                                        Visibility="{TemplateBinding Visibility}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        Background="{TemplateBinding Background}"
                                        Opacity="{TemplateBinding Opacity}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentControl>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{DynamicResource MainBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
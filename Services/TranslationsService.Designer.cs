//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TranslationsService {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TranslationsService() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Services.TranslationsService", typeof(TranslationsService).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string AAAA_DESCRIPTION {
            get {
                return ResourceManager.GetString("AAAA_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Aaah!.
        /// </summary>
        internal static string AAAH {
            get {
                return ResourceManager.GetString("AAAH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AK-47.
        /// </summary>
        internal static string AK47 {
            get {
                return ResourceManager.GetString("AK47", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fusil d&apos;assaut.
        /// </summary>
        internal static string ASSAULT_RIFLE {
            get {
                return ResourceManager.GetString("ASSAULT_RIFLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string AUTOMATIC_SHOTGUN {
            get {
                return ResourceManager.GetString("AUTOMATIC_SHOTGUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Batte de base-ball.
        /// </summary>
        internal static string BASEBALL_BAT {
            get {
                return ResourceManager.GetString("BASEBALL_BAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Betty.
        /// </summary>
        internal static string BETTY {
            get {
                return ResourceManager.GetString("BETTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Arc.
        /// </summary>
        internal static string BOW {
            get {
                return ResourceManager.GetString("BOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à +1 dégat pour chaque 6 sur le jet d&apos;attaque à distance.
        /// </summary>
        internal static string BOW_DESCRIPTION {
            get {
                return ResourceManager.GetString("BOW_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gilet pare-balles.
        /// </summary>
        internal static string BULLETPROOF_VEST {
            get {
                return ResourceManager.GetString("BULLETPROOF_VEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string BULLETPROOF_VEST_DESCRIPTION {
            get {
                return ResourceManager.GetString("BULLETPROOF_VEST_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tronçonneuse.
        /// </summary>
        internal static string CHAINSAW {
            get {
                return ResourceManager.GetString("CHAINSAW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Marteau.
        /// </summary>
        internal static string CLAW_HAMMER {
            get {
                return ResourceManager.GetString("CLAW_HAMMER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string CONCRETE_SAW {
            get {
                return ResourceManager.GetString("CONCRETE_SAW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cookies.
        /// </summary>
        internal static string COOKIES {
            get {
                return ResourceManager.GetString("COOKIES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Gagne 1 point d&apos;expérience..
        /// </summary>
        internal static string COOKIES_DESCRIPTION {
            get {
                return ResourceManager.GetString("COOKIES_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pied de biche.
        /// </summary>
        internal static string CROWBAR {
            get {
                return ResourceManager.GetString("CROWBAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Daisho.
        /// </summary>
        internal static string DAISHO {
            get {
                return ResourceManager.GetString("DAISHO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à La plupart des gens se sentent mal à l’aise lorsqu’ils rencontrent Adam pour la première fois. Un gars aussi joyeux est forcément dingue ! Adam met les choses au clair en quelques minutes. Il a choisi d’apprécier sa nouvelle vie au cœur de l’apocalypse zombie et il est toujours prêt à partager ses vibrations positives avec ceux qui l’entourent. À part avec les zombies, bien sûr, qui peuvent goûter aux talents martiaux de ce guerrier jovial, notamment au corps à corps..
        /// </summary>
        internal static string DESCRIPTION_ADAM {
            get {
                return ResourceManager.GetString("DESCRIPTION_ADAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Amy était une goth haineuse du monde entier, du consumérisme aveugle jusqu’à l’idiotie même de l’existence. Le monde que Amy méprisait tant s’est écroulé et de ses cendres émerge l’espoir d’un nouveau départ et d’une vie plus simple. Livrer une bataille désespérée aux zombies a ravivé la volonté de vivre d’Amy, mais elle ne se sent pas encore très à l’aise sans son fond-de-teint blanc..
        /// </summary>
        internal static string DESCRIPTION_AMY {
            get {
                return ResourceManager.GetString("DESCRIPTION_AMY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bear est une force de la nature, du genre qu’il faut redouter. Solide comme le roc, il peut soulever un homme d’une seule main. Son sport favori ? Le lancer de zombie..
        /// </summary>
        internal static string DESCRIPTION_BEAR {
            get {
                return ResourceManager.GetString("DESCRIPTION_BEAR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fille d’un ancien sergent-instructeur, Belle a grandi dans la rue et s’est épanouie par le parkour, le parcours d’obstacles urbain. De son point de vue, la ville est comme n’importe quelle étendue sauvage et a ses propres lois. Les proies ne regardent jamais en l’air pour voir les prédateurs sur les toits ! Les choses ont changé, toutefois, depuis que les gens sont devenus des monstres idiots. Le troupeau doit être décimé..
        /// </summary>
        internal static string DESCRIPTION_BELLE {
            get {
                return ResourceManager.GetString("DESCRIPTION_BELLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sprinteuse au grand cœur dotée d’une haine farouche pour les zombies, Cathy peut distancer n’importe quoi ou n’importe qui (à l’exception d’une Bimbo en rollers)..
        /// </summary>
        internal static string DESCRIPTION_CATHY {
            get {
                return ResourceManager.GetString("DESCRIPTION_CATHY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sage et généreux, Dan a le don de trouver la solution à tous les problèmes en un rien de temps, y compris pour faire un aller-retour en enfer..
        /// </summary>
        internal static string DESCRIPTION_DAN {
            get {
                return ResourceManager.GetString("DESCRIPTION_DAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Derek arpentait le Grand Nord pour établir les limites des propriétés et trouver tout ce qu’on pourrait vouloir trouver là-bas. Œil d’aigle et nerfs d’acier, Derek n’a pas attendu les zombies pour être un survivant.
        ///Les zombies n’ont changé qu’une seule chose dans sa vie. Lorsque la civilisation s’est effondrée, il a pris la direction du sud et d’une vie plus facile. Il a marché sur mille ou deux mille kilomètres sans problème. Rien n’est difficile quand on sait survivre à un blizzard !.
        /// </summary>
        internal static string DESCRIPTION_DEREK {
            get {
                return ResourceManager.GetString("DESCRIPTION_DEREK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 4 heures dans les transports, 12 heures de travail par jour, des collègues peu coopératifs et un patron indifférent appartiennent tous au passé de Doug. C’est certain, faire face aux zombies est un peu stressant mais pour être franc, c’est quand même mieux que le train-train quotidien. Un Uzi dans chaque main, c’est utile pour négocier avec les ex-collègues et les ex-patrons. De toute manière, Doug est persuadé qu’ils étaient déjà des zombies avant toute cette histoire..
        /// </summary>
        internal static string DESCRIPTION_DOUG {
            get {
                return ResourceManager.GetString("DESCRIPTION_DOUG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Jolie fille née dans une famille pauvre, Elsa a appris que l’agilité, l’apparence et la subtilité pouvaient sont autant de voies vers la richesse. Voler des bien précieux était sa dose quotidienne d’adrénaline, surtout si cela comprenait quelques acrobaties et un vrai défi au niveau de la sécurité.
        ///Elsa était poursuivie par les policiers sur les toits quand les zombies sont apparus et ont changé sa vie. L’or n’a plus aucune valeur désormais mais les abris blindés dissimulent toujours des biens précieux. Jo [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string DESCRIPTION_ELSA {
            get {
                return ResourceManager.GetString("DESCRIPTION_ELSA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Le Heavy Metal n’est pas un genre musical, c’est une hygiène de vie, et c’est la voie que Grindlock a choisie. C’est certain, cette armoire à glace n’entrait pas vraiment dans le moule, mais il s’en moquait. Le travail devait être fait, la musique devait être forte, et tout le reste n’était que vanité.
        ///Grindlock n’a pas cillé quand les zombies sont venus le chercher. Il les a slammés comme des mouches, s’est emparé d’une tronçonneuse, et s’en est allé voir l’apocalypse droit dans les yeux avec un petit sou [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string DESCRIPTION_GRINDLOCK {
            get {
                return ResourceManager.GetString("DESCRIPTION_GRINDLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Tireur hors pair, James aime se considérer comme un chasseur moderne dans un safari permanent. Un safari zombie, bien entendu. Défi accepté !.
        /// </summary>
        internal static string DESCRIPTION_JAMES {
            get {
                return ResourceManager.GetString("DESCRIPTION_JAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Jane est la gâchette la plus rapide de la ville. Elle conserve son côté cool et son humour au second degré même dans les pires situations. La connaître, c’est l’aimer !.
        /// </summary>
        internal static string DESCRIPTION_JANE {
            get {
                return ResourceManager.GetString("DESCRIPTION_JANE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Jeff est doté d’un esprit logique et s’avère être un tireur remarquable. Il aime donner son avis sur tout ce qui se passe dans ce monde de zombies. La plupart du temps, il préconise le travail d’équipe et les frappes précises pour atteindre le but recherché. Ce n’est que lorsqu’il abat des dizaines de zombies l’un après l’autre, d’une balle dans la tête, qu’il cesse enfin de parler..
        /// </summary>
        internal static string DESCRIPTION_JEFF {
            get {
                return ResourceManager.GetString("DESCRIPTION_JEFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joe sait comment transformer les trucs les plus bizarres en quelque chose d’utile, voire de mortel. Avant les zombies, il était considéré comme un crétin. Aujourd’hui, tout le monde a réalisé que c’est un génie !.
        /// </summary>
        internal static string DESCRIPTION_JOE {
            get {
                return ResourceManager.GetString("DESCRIPTION_JOE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Josh était un vaurien, un type qui a grandi dans un quartier pauvre et « difficile ». Survivre au jour le jour était tout ce qu’il pouvait faire avant les zombies. Maintenant qu’il n’y a plus de loi ni qui que ce soit pour lui dicter sa conduite, Josh remarque que sa connaissance de la rue est très prisée par les autres survivants. Le respect est tellement plus précieux que tout l’or du monde….
        /// </summary>
        internal static string DESCRIPTION_JOSH {
            get {
                return ResourceManager.GetString("DESCRIPTION_JOSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Joshua a longtemps étudié comment survivre à une invasion de zombies. Les films, les jeux vidéos et les livres disaient n’importe quoi mais contenait tout de même quelques astuces pour les esprits éclairés. Quand l’apocalypse est finalement arrivée, Joshua a fait son paquetage et a juré de sauver autant de gens que possible, à condition qu’ils l’écoutent et ne tentent rien d’idiot. Il a désormais trouvé une équipe et est prêt à tout pour la garder soudée. Joshua est toujours là pour sauver le monde !.
        /// </summary>
        internal static string DESCRIPTION_JOSHUA {
            get {
                return ResourceManager.GetString("DESCRIPTION_JOSHUA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à De nos jours, parler du passé est considéré comme impoli, mais de par son accent, il est facile de deviner que Julien vient d’un pays étranger, sans doute d’Europe. Julien est vraiment à l’aise au cœur des combats urbains. Il s’est créé un style de combat entre fureur et sang-froid et se révèle être un atout précieux avec toutes sortes de fusils à pompe..
        /// </summary>
        internal static string DESCRIPTION_JULIEN {
            get {
                return ResourceManager.GetString("DESCRIPTION_JULIEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adroite, maline et tête brûlée, Kim a travaillé pour un parrain du crime dans un casino clandestin pendant des années. Sa chance incroyable était comme une signature. Elle gagnait en un soir plus d’argent pour son gang que la plupart des gens en dix ans. Elle menait déjà une vie dangereuse avant l’arrivée des zombies et, pour elle, l’apocalypse est comme une nouvelle main de cartes. Toutes les traces de son passé criminel ont été lavées dans le sang. La survie est le jeu ultime et Kim sait déjà qu’elle va g [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string DESCRIPTION_KIM {
            get {
                return ResourceManager.GetString("DESCRIPTION_KIM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Introvertie la plupart du temps, Laurie dévoile sa vraie personnalité au cœur du combat. Elle est si rapide qu’il est pénible de suivre ses mouvements. Surtout pour les zombies..
        /// </summary>
        internal static string DESCRIPTION_LAURIE {
            get {
                return ResourceManager.GetString("DESCRIPTION_LAURIE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Louise n’est pas le genre de fille à se cacher au fond d’un abri. Elle a parcouru la ville infestée de zombies en de nombreuses occasions et a dissimulé des armes dans les endroits les plus inattendus. Personne ne peut la prendre par surprise !.
        /// </summary>
        internal static string DESCRIPTION_LOUISE {
            get {
                return ResourceManager.GetString("DESCRIPTION_LOUISE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Maddie ne pense plus au passé. Elle ne se préoccupe plus que des choses simples, comme la vie et la mort et aujourd’hui, elle est en guerre. En guerre contre les zombies en général et contre les porcs capitalistes zombies en particulier !.
        /// </summary>
        internal static string DESCRIPTION_MADDIE {
            get {
                return ResourceManager.GetString("DESCRIPTION_MADDIE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ned le savait. Il savait que ÇA arriverait. Tout ÇA, c’est de LEUR faute. Mais personne ne l’a ECOUTÉ et maintenant ils se plaignent que c’est la CATA. Ned s’est préparé pendant des années : rassembler des armes et de la nourriture, construire un bunker, tout était prêt pour survivre à ÇA. Malheureusement, Ned a perdu la clé de son bunker et jusqu’à ce qu’il la retrouve, il aura besoin de tous les moyens de survie à sa disposition. Et peut-être même d’autres gens. Fait ch….
        /// </summary>
        internal static string DESCRIPTION_NED {
            get {
                return ResourceManager.GetString("DESCRIPTION_NED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Neema avait déjà la volonté de fer d’une survivante avant l’apocalypse. Sa détermination et son travail acharné lui ouvrirent les portes de l’ascenseur social pour grimper au sommet de la chaîne alimentaire. Son ambition n’était égalée que par son intelligence : devenir cadre supérieure n’était que le premier pas de son irrésistible ascension.
        ///Brisant le travail d’une vie, les zombies ont éveillé quelque chose en Neema. Quelque chose de sauvage. Neema est toujours une chef-née mais dans son âme explose un  [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string DESCRIPTION_NEEMA {
            get {
                return ResourceManager.GetString("DESCRIPTION_NEEMA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à En période d’invasion zombie, avoir un toubib sous le coude représente un atout indéniable. Ne vous méprenez pas cependant : Parker est un combattant endurci, capable si besoin de traîner sa carcasse (et la vôtre en prime) un peu partout..
        /// </summary>
        internal static string DESCRIPTION_PARKER {
            get {
                return ResourceManager.GetString("DESCRIPTION_PARKER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Phil est un policier corps et âme, même s’il n’y a plus vraiment de police désormais. Il porte toujours son uniforme, conserve son arme de service et considère la protection des autres citoyens comme son devoir. Du moins, ceux qui sont encore humains. Être un policier lui permet de conserver le peu de santé mentale qui lui reste..
        /// </summary>
        internal static string DESCRIPTION_PHIL {
            get {
                return ResourceManager.GetString("DESCRIPTION_PHIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Raoul est un ancien médicin militaire. Il a fait son boulot chez dans une boîte d’ambulanciers locaux en tant que chef d’équipe médicale… blasé. Il pensait avoir tout vu. En tout cas, jusqu’à ce que ses amis et collègues se fassent grignoter par la horde de zombies alors qu’ils composaient les numéros d’urgence au début de l’épidémie. Les naïfs. Désormais dénué d’empathie et de bandages, Raoul est en quête de revanche. Il est équipé, prêt à descendre dans la rue, et embarque tout les « médicaments » dont au [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string DESCRIPTION_RAOUL {
            get {
                return ResourceManager.GetString("DESCRIPTION_RAOUL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à D’ascendance irlandaise, Shannon est une femme d’action. Les guerres de gangs, les milices, l’armée, elle a tout fait mais n’a jamais trouvé une bataille dans laquelle s’engager corps et âme. De retour à la vie civile après un énième accident avec son dernier partenaire, Shannon cherchait un boulot de videuse quand les zombies sont arrivés et ont donné un vrai sens à son existence. Shannon a désormais plus d’une cause à défendre : survivre, protéger des civils et exterminer des zombies avec extrême préjudic [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string DESCRIPTION_SHANNON {
            get {
                return ResourceManager.GetString("DESCRIPTION_SHANNON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ancien combattant, Terry a quitté un champ de bataille pour un autre. Ses compétences d’officier pourraient transformer des collégiennes en une escouade de commandos. Alors, imaginez ce qu’il peut faire avec des survivants endurcis..
        /// </summary>
        internal static string DESCRIPTION_TERRY {
            get {
                return ResourceManager.GetString("DESCRIPTION_TERRY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Dotée d’un enthousiasme débordant et prête à tout pour protéger ses compagnons, Tiff incarne l’esprit rock’n’roll parmi les Survivants. Elle adore les bibelots pré-apocalyptiques, particulièrement ceux en rapport avec son mode de vie et sa musique. Elle aime se considérer comme une chasseuse de trésors. Son arme préférée reste tout de même son fidèle Pistolet mitrailleur !.
        /// </summary>
        internal static string DESCRIPTION_TIFF {
            get {
                return ResourceManager.GetString("DESCRIPTION_TIFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Travis est un homme éduqué que la vie a transformé en tueur de zombies. Du genre patient et impitoyable, il y a une chose qu’il apprécie dans l’apocalypse zombie : c’est que les gens révèlent leur vraie nature..
        /// </summary>
        internal static string DESCRIPTION_TRAVIS {
            get {
                return ResourceManager.GetString("DESCRIPTION_TRAVIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wanda servait de la bière et des hamburgers au drive-in du coin. L’apocalypse zombie n’a pas vraiment changé ses habitudes : elle esquive toujours des mains avides de chair, file sur ses rollers et repousse les prétendants un peu trop hardis. La tronçonneuse, par contre, c’est un bonus..
        /// </summary>
        internal static string DESCRIPTION_WANDA {
            get {
                return ResourceManager.GetString("DESCRIPTION_WANDA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Après une jeunesse tumultueuse, Watts décida de mener une vie normale avec un boulot pépère, une femme, deux enfants et un Jack Russel. Ca a presque marché. Au bout de dix ans, son employeur a délocalisé son activité et l’a renvoyé pour faire des économies. Le père de famille était en train de se transformer en zombie quand les vrais zombies sont apparus et lui ont sauvé la vie en lui ouvrant les yeux. Watts installa sa famille dans un bus, ressortit sa vieille batte cloutée et retrouva ses vieilles habitud [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string DESCRIPTION_WATTS {
            get {
                return ResourceManager.GetString("DESCRIPTION_WATTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Desert Eagle.
        /// </summary>
        internal static string DESERT_EAGLE {
            get {
                return ResourceManager.GetString("DESERT_EAGLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string DOUBLE_BARREL {
            get {
                return ResourceManager.GetString("DOUBLE_BARREL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Doug&apos;s Dream.
        /// </summary>
        internal static string DOUGS_DREAM {
            get {
                return ResourceManager.GetString("DOUGS_DREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string EVILTWIN {
            get {
                return ResourceManager.GetString("EVILTWIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hache.
        /// </summary>
        internal static string FIREAXE {
            get {
                return ResourceManager.GetString("FIREAXE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lance flamme.
        /// </summary>
        internal static string FLAMETHROWER {
            get {
                return ResourceManager.GetString("FLAMETHROWER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Utilisez une carte essence pour tuer tout le monde dans la zone visée (effet identique au cocktail molotov)..
        /// </summary>
        internal static string FLAMETHROWER_DESCRIPTION {
            get {
                return ResourceManager.GetString("FLAMETHROWER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lampe torche.
        /// </summary>
        internal static string FLASHLIGHT {
            get {
                return ResourceManager.GetString("FLASHLIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string FLASHLIGHT_DESCRIPTION {
            get {
                return ResourceManager.GetString("FLASHLIGHT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boites de conserve.
        /// </summary>
        internal static string FOOD {
            get {
                return ResourceManager.GetString("FOOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Masque à gaz.
        /// </summary>
        internal static string GASMASK {
            get {
                return ResourceManager.GetString("GASMASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Le survivant est immunisé aux éclaboussures de gaz toxiques..
        /// </summary>
        internal static string GASMASK_DESCRIPTION {
            get {
                return ResourceManager.GetString("GASMASK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Essence.
        /// </summary>
        internal static string GASOLINE {
            get {
                return ResourceManager.GetString("GASOLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string GASOLINE_DESCRIPTION {
            get {
                return ResourceManager.GetString("GASOLINE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bouteille.
        /// </summary>
        internal static string GLASSBOTTLE {
            get {
                return ResourceManager.GetString("GLASSBOTTLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string GLASSBOTTLE_DESCRIPTION {
            get {
                return ResourceManager.GetString("GLASSBOTTLE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Masque de hockey.
        /// </summary>
        internal static string GOALIEMASK {
            get {
                return ResourceManager.GetString("GOALIEMASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string GOALIEMASK_DESCRIPTION {
            get {
                return ResourceManager.GetString("GOALIEMASK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AK-47 plaqué or.
        /// </summary>
        internal static string GOLDEN_AK47 {
            get {
                return ResourceManager.GetString("GOLDEN_AK47", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GunBlade.
        /// </summary>
        internal static string GUNBLADE {
            get {
                return ResourceManager.GetString("GUNBLADE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hachette.
        /// </summary>
        internal static string HATCHET {
            get {
                return ResourceManager.GetString("HATCHET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string HOLLOW_POINT_ROUNDS {
            get {
                return ResourceManager.GetString("HOLLOW_POINT_ROUNDS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string HOLLOW_POINT_ROUNDS_DESCRIPTION {
            get {
                return ResourceManager.GetString("HOLLOW_POINT_ROUNDS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Jack &amp; Jill.
        /// </summary>
        internal static string JACK_JILL {
            get {
                return ResourceManager.GetString("JACK_JILL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Katana.
        /// </summary>
        internal static string KATANA {
            get {
                return ResourceManager.GetString("KATANA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Couteau.
        /// </summary>
        internal static string KNIFE {
            get {
                return ResourceManager.GetString("KNIFE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Si équipé, les autres armes de mélée équipées gagne +1dé..
        /// </summary>
        internal static string KNIFE_DESCRIPTION {
            get {
                return ResourceManager.GetString("KNIFE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Kukri.
        /// </summary>
        internal static string KUKRI {
            get {
                return ResourceManager.GetString("KUKRI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pointeur Laser.
        /// </summary>
        internal static string LASER_POINTER {
            get {
                return ResourceManager.GetString("LASER_POINTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à En combinaison avec le Pa&apos;s gun, les pistolets, les sub MG ou les evil twins. Un pointeur par arme. Pour les armes dual, chaque arme peux être combiner avec un pointeur..
        /// </summary>
        internal static string LASER_POINTER_DESCRIPTION {
            get {
                return ResourceManager.GetString("LASER_POINTER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string MA_SHOTGUN {
            get {
                return ResourceManager.GetString("MA_SHOTGUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MAC 10.
        /// </summary>
        internal static string MAC10 {
            get {
                return ResourceManager.GetString("MAC10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Machette.
        /// </summary>
        internal static string MACHETE {
            get {
                return ResourceManager.GetString("MACHETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .44 Magnum.
        /// </summary>
        internal static string MAGNUM44 {
            get {
                return ResourceManager.GetString("MAGNUM44", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string MEAT_CLEAVER {
            get {
                return ResourceManager.GetString("MEAT_CLEAVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cocktail Molotov.
        /// </summary>
        internal static string MOLOTOV {
            get {
                return ResourceManager.GetString("MOLOTOV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MP5.
        /// </summary>
        internal static string MP5 {
            get {
                return ResourceManager.GetString("MP5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Batte cloutée.
        /// </summary>
        internal static string NAILBAT {
            get {
                return ResourceManager.GetString("NAILBAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clous.
        /// </summary>
        internal static string NAILS {
            get {
                return ResourceManager.GetString("NAILS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Combinez avec une batte de baseball pour obtenir une batte de basse ball cloutée..
        /// </summary>
        internal static string NAILS_DESCRIPTION {
            get {
                return ResourceManager.GetString("NAILS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ned&apos;s Atomic Flashlight.
        /// </summary>
        internal static string NEDS_FLASHLIGHT {
            get {
                return ResourceManager.GetString("NEDS_FLASHLIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string NIGHT_STICK {
            get {
                return ResourceManager.GetString("NIGHT_STICK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Si equipé, jeter pour empêcher une blessure infligée au survivant..
        /// </summary>
        internal static string NIGHT_STICK_DESCRIPTION {
            get {
                return ResourceManager.GetString("NIGHT_STICK_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Poêle.
        /// </summary>
        internal static string PAN {
            get {
                return ResourceManager.GetString("PAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PA&apos;s Gun.
        /// </summary>
        internal static string PAS_GUN {
            get {
                return ResourceManager.GetString("PAS_GUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à M4 rose.
        /// </summary>
        internal static string PINK_M4 {
            get {
                return ResourceManager.GetString("PINK_M4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pistolet.
        /// </summary>
        internal static string PISTOL {
            get {
                return ResourceManager.GetString("PISTOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Munitions en pagaille.
        /// </summary>
        internal static string PLENTY_AMMO_BULLET {
            get {
                return ResourceManager.GetString("PLENTY_AMMO_BULLET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string PLENTY_AMMO_BULLET_DESCRIPTION {
            get {
                return ResourceManager.GetString("PLENTY_AMMO_BULLET_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Munitions en pagaille.
        /// </summary>
        internal static string PLENTY_AMMO_SHOTGUN {
            get {
                return ResourceManager.GetString("PLENTY_AMMO_SHOTGUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string PLENTY_AMMO_SHOTGUN_DESCRIPTION {
            get {
                return ResourceManager.GetString("PLENTY_AMMO_SHOTGUN_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sac de riz.
        /// </summary>
        internal static string RICE {
            get {
                return ResourceManager.GetString("RICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fusil.
        /// </summary>
        internal static string RIFLE {
            get {
                return ResourceManager.GetString("RIFLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Bouclier anti-émeute.
        /// </summary>
        internal static string RIOT_SHIELD {
            get {
                return ResourceManager.GetString("RIOT_SHIELD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Si équipé : (1) Gagne la compétence Coriace. (2) Si jeté, évite une blessure infligée au survivant..
        /// </summary>
        internal static string RIOT_SHIELD_DESCRIPTION {
            get {
                return ResourceManager.GetString("RIOT_SHIELD_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sabre.
        /// </summary>
        internal static string SABER {
            get {
                return ResourceManager.GetString("SABER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Canon scié.
        /// </summary>
        internal static string SAWED_OFF {
            get {
                return ResourceManager.GetString("SAWED_OFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Viseur.
        /// </summary>
        internal static string SCOPE {
            get {
                return ResourceManager.GetString("SCOPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string SCOPE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SCOPE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Fusil à pompe.
        /// </summary>
        internal static string SHOTGUN {
            get {
                return ResourceManager.GetString("SHOTGUN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string SPARE_CHANGE {
            get {
                return ResourceManager.GetString("SPARE_CHANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Les canons sciés deviennent des armes de dégat 2..
        /// </summary>
        internal static string SPARE_CHANGE_DESCRIPTION {
            get {
                return ResourceManager.GetString("SPARE_CHANGE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SPAS 12.
        /// </summary>
        internal static string SPAS12 {
            get {
                return ResourceManager.GetString("SPAS12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 911 Special.
        /// </summary>
        internal static string SPECIAL911 {
            get {
                return ResourceManager.GetString("SPECIAL911", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a faire.
        /// </summary>
        internal static string SUBMG {
            get {
                return ResourceManager.GetString("SUBMG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sweet Sisters.
        /// </summary>
        internal static string SWEET_SISTERS {
            get {
                return ResourceManager.GetString("SWEET_SISTERS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Epée.
        /// </summary>
        internal static string SWORD {
            get {
                return ResourceManager.GetString("SWORD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thompson.
        /// </summary>
        internal static string THOMPSON {
            get {
                return ResourceManager.GetString("THOMPSON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Masse urbaine.
        /// </summary>
        internal static string URBAN_MACE {
            get {
                return ResourceManager.GetString("URBAN_MACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wakizachi.
        /// </summary>
        internal static string WAKIZACHI {
            get {
                return ResourceManager.GetString("WAKIZACHI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Si équipé : gagne +2 dés avec le katana.
        /// </summary>
        internal static string WAKIZACHI_DESCRIPTION {
            get {
                return ResourceManager.GetString("WAKIZACHI_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Eau.
        /// </summary>
        internal static string WATER {
            get {
                return ResourceManager.GetString("WATER", resourceCulture);
            }
        }
    }
}
